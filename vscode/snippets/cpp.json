{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"namespace anonymous": {
		"prefix": "namesp-local",
		"body": [
			"namespace {",
			"$0",
			"}  // namespace"
		]
	},
	"namespace": {
		"prefix": "namesp",
		"body": [
			"namespace $1 {",
			"$0",
			"}  // namespace $1"
		]
	},
	"pragma mark": {
		"prefix": "pragma-mark",
		"body": [
			"//--------------------------------------------------------------------------------------------------",
			"#pragma mark - $0",
			"//--------------------------------------------------------------------------------------------------"
		]
	},
	"cout": {
		"prefix": "cout",
		"body": "std::cout << $0 << std::endl"
	},
	"docstring": {
		"prefix": "doc",
		"body": [
			"/**",
			" * \\brief $0",
			" */"
		]
	},
	"rule-of-five": {
		"prefix": "rule-of-five",
		"body": [
			"$1(const $1&) = default;",
			"$1& operator=(const $1&) = default;",
			"$1($1&&) = default;",
			"$1& operator=($1&&) = default;",
			"~$1() = default;",
			"$0"
		]
	}
}
